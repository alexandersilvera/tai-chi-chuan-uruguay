---
import Layout from "@/layouts/Layout.astro";
import TagSelector from "@/components/TagSelector.astro";

interface Props {
  currentPage?: number;
  totalPages?: number;
  currentTag?: string;
  slug: string;
  initialLikes: number;
}

const { currentPage = 1, totalPages = 1, currentTag, slug, initialLikes} = Astro.props;
---

<Layout title="Blog">
  <div class="max-w-6xl mx-auto px-4 sm:px-6 py-12">
    <h1 class="text-3xl sm:text-4xl md:text-5xl font-bold text-white mb-8">Blog</h1>
    <p class="text-zinc-400 mb-8 max-w-3xl">Explora nuestros artículos sobre Tai Ji Quan, filosofía oriental y artes marciales.</p>
    
    <TagSelector />
    
    {currentTag && (
      <div class="mb-6 flex items-center gap-4">
        <span class="bg-emerald-600/20 text-emerald-400 px-4 py-2 rounded-full text-sm">
          Filtro activo: {currentTag}
        </span>
        <a
          href="/blog"
          class="text-zinc-400 hover:text-white text-sm flex items-center gap-1"
        >
          <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"/>
          </svg>
          Limpiar filtro
        </a>
      </div>
    )}

    <section class="mt-8">
      <ul class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-6 sm:gap-8">
        <slot />
      </ul>
    </section>

    {totalPages > 1 && (
      <div class="mt-12 flex flex-col sm:flex-row items-center justify-between gap-4 text-zinc-400">
        <div class="flex gap-2">
          {currentPage > 1 && (
            <a
              href={
                currentTag
                  ? currentPage === 2
                    ? `/blog/tag/${currentTag}`
                    : `/blog/tag/${currentTag}/page/${currentPage - 1}`
                  : currentPage === 2
                  ? "/blog"
                  : `/blog/page/${currentPage - 1}`
              }
              class="px-4 py-2 hover:text-white transition-colors rounded-lg bg-zinc-800 hover:bg-zinc-700 flex items-center gap-1"
            >
              <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7"/>
              </svg>
              Anterior
            </a>
          )}
        </div>

        <div class="flex gap-2 items-center">
          {Array.from({ length: totalPages }, (_, i) => {
            const pageNumber = i + 1;
            const isActive = pageNumber === currentPage;
            const basePath = currentTag ? `/blog/tag/${currentTag}` : "/blog";
            const pagePath = pageNumber === 1 ? basePath : `${basePath}/page/${pageNumber}`;
            
            return (
              <a
                href={pagePath}
                class={`px-3 py-1 rounded-lg ${
                  isActive
                    ? 'bg-emerald-600 text-white'
                    : 'hover:bg-zinc-800 hover:text-white'
                }`}
              >
                {pageNumber}
              </a>
            );
          })}
        </div>

        <div class="flex gap-2">
          {currentPage < totalPages && (
            <a
              href={
                currentTag
                  ? `/blog/tag/${currentTag}/page/${currentPage + 1}`
                  : `/blog/page/${currentPage + 1}`
              }
              class="px-4 py-2 hover:text-white transition-colors rounded-lg bg-zinc-800 hover:bg-zinc-700 flex items-center gap-1"
            >
              Siguiente
              <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"/>
              </svg>
            </a>
          )}
        </div>
      </div>
    )}
  </div>
</Layout>